<?xml version="1.0"?>
<package >
  <metadata>
    <!-- The identifier that must be unique within the hosting gallery -->
    <id>swigged.cuda</id>
    <title>swigged.cuda</title>

    <version>9.2148.2</version>

    <!-- Authors contain text that appears directly on the gallery -->
    <authors>Ken Domino</authors>
    
    <!-- Owners are typically nuget.org identities that allow gallery
            users to easily find other packages by the same owners.
    -->
    <owners>Ken Domino</owners>

    <!-- License, project, icon links for the gallery -->
    <projectUrl>https://github.com/kaby76/swigged.cuda</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/kaby76/swigged.cuda/master/Nvidia_CUDA_Logo.jpg</iconUrl>
    <licenseUrl>https://github.com/kaby76/swigged.cuda/blob/master/license</licenseUrl>

    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A C# wrapper API of CUDA Driver API (v9.2.88) for Windows and Ubuntu (x64).</description>
    <releaseNotes>
* Version 9.2148.2
Release for CUDA GPU Toolkit 9.2.148. NOTE: Includes both Windows and Linux builds.

Object files provided in this package are a Release build in Net Standard 2. You must have CUDA 9.2.148 installed.

When building with Swigged.CUDA, select Platform = "AnyCPU", config = "Debug" or "Release".

On Windows, in the properties for the executable, un-check "Prefer 32-bit" in Build properties, and check "Enable native code debugging". If you are using Net Core or Standard, this option is unavailable--I'm not sure why it is.
You will need to copy the dll to the directory containing your app if the build script does not copy the file to the directory for the build.

For further information, see https://github.com/kaby76/swigged.cuda
    </releaseNotes>

    <!-- Copyright information -->
    <copyright>Copyright Â© 2017-2018</copyright>

    <!-- Tags appear in the gallery and can be used for tag searches -->
    <tags>CUDA GPU NVIDIA SWIG native c# compilers bindings pinvoke Windows </tags>

    <!-- Dependencies are automatically installed when the package is
    installed -->
    <!-- For full list, see 
    https://docs.microsoft.com/en-us/nuget/schema/target-frameworks
    Note, I have seen some targetFramework="..." with some
    undocumented strings: ".NETFramework4.6.2", ".NETFramework4.5.2",
    ... Not sure if they work. --> 
    <dependencies>
      <group targetFramework="net461" >
	       <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="net462" >
	     <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="net47" >
	       <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="net471" >
	       <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="netstandard2.0" >
	       <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="netcoreapp2.0" >
        <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="netcoreapp2.1" >
        <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>

    </dependencies>

  </metadata>
  
  <files>

     <!-- There are two possible dll's, one for
     for the Release assembly, and the other a native x64 target.

     Note: By trial and error, if you want to target a particular
     framework, you HAVE TO copy the swigged.cuda.dll to each target
     directory path. It will not work to have it only in /lib of the
     nuget package.

     Note2: By trial and error, I found out that you cannot include
     file swigged-cuda-native.dll in any of the net framework targets.
     Otherwise, it complains it cannot
     make a reference to that dll, not create a reference
     to swigged.cuda.dll, and fail to install the nuget package.
     The native file is referenced by a build copy step that copies
     the native dll to the location of the executable.

     Note3: By trial and error, I found out that you MUST include
     file swigged-cuda-native.dll in the net core and standard
     targets. Copying the native dll to the directory of the
     executable DOES NOT WORK.

     -->

    <file src="swigged.cuda.targets" target="build\swigged.cuda.targets" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/net461" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/net462" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/net47" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/net471" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/netstandard2.0" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/netcoreapp2.0" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.9.2148.2.dll" target="lib/netcoreapp2.1" />
    <file src="..\swigged.cuda.native\x64\Release\swigged-cuda-native-9-2148-2.dll" target="lib/native/" />
    <file src="..\swigged.cuda.native\x64\Release\swigged-cuda-native-9-2148-2.pdb" target="lib/native/" />
    <file src="..\swigged.cuda.native\bin\x64\Release\swigged-cuda-native-9-2148-2.so" target="lib/native/" />

  </files>
</package>
