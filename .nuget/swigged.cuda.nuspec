<?xml version="1.0"?>
<package >
  <metadata>
    <!-- The identifier that must be unique within the hosting gallery -->
    <id>swigged.cuda</id>
    <title>swigged.cuda</title>

    <version>9.1.85.2</version>

    <!-- Authors contain text that appears directly on the gallery -->
    <authors>Ken Domino</authors>
    
    <!-- Owners are typically nuget.org identities that allow gallery
            users to easily find other packages by the same owners.
    -->
    <owners>Ken Domino</owners>

    <!-- License, project, icon links for the gallery -->
    <projectUrl>https://github.com/kaby76/swigged.cuda</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/kaby76/swigged.cuda/master/Nvidia_CUDA_Logo.jpg</iconUrl>
    <licenseUrl>https://github.com/kaby76/swigged.cuda/blob/master/license</licenseUrl>

    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A C# wrapper API of CUDA Driver API (v9.0.176) for Windows (x64).</description>
    <releaseNotes>
* Version 9.1.85.2
After MUCH trial and error, I have updated the .NUSPEC file to support Net Framework and Core correctly. Unfortunately, the rules for each target platform changes with each target platform.

* Version 9.1.85.1
Release for Version 9.1.85 of the NVIDIA CUDA GPU Computing Toolkit. Compiling this API under NetStandard 2.0.
       
* Version 9.0.176.3
Fixing restore and build issues--apparently somewhere along the way, the projectdir\packages directory no longer exists. Use userprofile\.nuget\packages directory.

* Version 9.0.176.2
--- do not use ---

* Version 9.0.176.1
Adopting version numbers that reflect NVIDIA GPU Computing Toolkit. Removed x86 Windows target library because the Toolkit does not support 32-bit target GPUs. In .NUSPEC file, specifying NETStandard.Library. It should suffice for all supported NET frameworks (CORE, Standard, Framework, ...).

* Version 9.0.2
Fixed cuLinkCreate and other functions that depend on options parameter.

* Version 9.0.1
Updating .targets file so that "copy" step of proper native library works regardless whether you "nuget"
for a Net Framework, Standard, or Core project. Rest of package is essentially unchanged.

* Version 9.0.0
Updated to latest NVIDIA GPU Computing Toolkit, version 9.0 (CUDA GPU Toolkit v9.0.176), Sep 22, 2017. For the latest changes to the API, see http://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html.

* Version 8.0.6
Updated .targets file for Windows builds.

* Version 8.0.5
Release for general use.
       
* Version 8.0.4-alpha
Only Windows released. Enmasse addition of Driver API.
       
* Version 8.0.3-alpha
Only Windows released. Fixed cuDeviceGetName.
       
* Version 8.0.2-alpha
Only Windows released. Fixed cuDeviceGetName.
       
* Version 8.0.1-alpha
Initial revision. Only Windows released.
       
Object files provided in this package are a Release build in Net Standard 1.1.

When building with Swigged.CUDA, select Platform = "AnyCPU", config = "Debug" or "Release".

On Windows, in the properties for the executable, un-check "Prefer 32-bit" in Build properties, and check "Enable native code debugging". If you are using Net Core or Standard, this option is unavailable--I'm not sure why it is.
You must manually copy the file swigged-cuda-native.dll to your executable directory.
If you are delivering your app, you will need to copy the dll to the directory containing your app.

For further information, see https://github.com/kaby76/swigged.cuda.8.0.
    </releaseNotes>

    <!-- Copyright information -->
    <copyright>Copyright © 2017-2018</copyright>

    <!-- Tags appear in the gallery and can be used for tag searches -->
    <tags>CUDA GPU NVIDIA SWIG native c# compilers bindings pinvoke Windows </tags>

    <!-- Dependencies are automatically installed when the package is
    installed -->
    <!-- For full list, see 
    https://docs.microsoft.com/en-us/nuget/schema/target-frameworks
    Note, I have seen some targetFramework="..." with some
    undocumented strings: ".NETFramework4.6.2", ".NETFramework4.5.2",
    ... Not sure if they work. --> 
    <dependencies>
      <group targetFramework="net461" >
	 <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="net462" >
	 <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="net47" >
	 <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="net471" >
	 <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="netstandard2.0" >
	 <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      <group targetFramework="netcoreapp2.0" >
	 <dependency id="NETStandard.Library" version="[2.0.0,)" />
      </group>
      
    </dependencies>

  </metadata>
  
  <files>

     <file src="..\swigged.cuda.targets" target="build\swigged.cuda.targets" />

     <!-- There are two possible dll's, one for
     for the Release assembly, and the other a native x64 target.

     Note: By trial and error, if you want to target a particular
     framework, you HAVE TO copy the swigged.cuda.dll to each target
     directory path. It will not work to have it only in /lib of the
     nuget package.

     Note2: By trial and error, I found out that you cannot include
     file swigged-cuda-native.dll in any of the net framework targets.
     Otherwise, it complains it cannot
     make a reference to that dll, not create a reference
     to swigged.cuda.dll, and fail to install the nuget package.
     The native file is referenced by a build copy step that copies
     the native dll to the location of the executable.

     Note3: By trial and error, I found out that you MUST include
     file swigged-cuda-native.dll in the net core and standard
     targets. Copying the native dll to the directory of the
     executable DOES NOT WORK.

     -->
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.dll" target="lib/net461" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.dll" target="lib/net462" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.dll" target="lib/net47" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.dll" target="lib/net471" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.dll" target="lib/netstandard2.0" />
    <file src="..\swigged.cuda.native\x64\Release\swigged-cuda-native.dll"  target="lib/netstandard2.0" />
    <file src="..\swigged.cuda\bin\Release\netstandard2.0\swigged.cuda.dll" target="lib/netcoreapp2.0" />
    <file src="..\swigged.cuda.native\x64\Release\swigged-cuda-native.dll"  target="lib/netcoreapp2.0" />
    <file src="..\swigged.cuda.native\x64\Release\swigged-cuda-native.dll" target="win10\lib\x64" />

  </files>
</package>
